<snippet>
	<content><![CDATA[
const int N=1e5+10;
int parent[N],sizes[N];

void make_set(int v) {
    parent[v] = v;
    sizes[v] = 1;
}

int find_set(int v) {
    if (v == parent[v])
        return v;
    return parent[v] = find_set(parent[v]);//path compression
}

void union_sets(int a, int b) {
    a = find_set(a);
    b = find_set(b);
    if (a != b) {
        if (sizes[a] < sizes[b])//union by size
            swap(a, b);
        parent[b] = a;
        sizes[a] += sizes[b];
    }
}

void kruskal(){
    int n,m;//node,edge
    cin>>n>>m;
    vector<pair<int,pair<int,int>>> edges;//w,s,d
    for(int i=0;i<m;i++){
        int s,d,w;
        cin>>s>>d>>w;
        edges.pb({w,{s,d}});
    }
    sort(all(edges));
    for(int i=1;i<=n;i++)
        make_set(i);
    int cost=0;
    vector<pair<int,int>> mst;
    for(auto it:edges){
        int w=it.first;
        int u=it.second.first;
        int v=it.second.second;
        if(find_set(u)==find_set(v))
            continue;
        union_sets(u,v);
        cost+=w;
        mst.pb({u,v});
    }
    cout<<cost<<endl;
    for(auto it:mst)
        cout<<it.first<<" "<<it.second<<endl;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>kruskal</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
