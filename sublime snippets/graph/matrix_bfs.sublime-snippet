<snippet>
	<content><![CDATA[
const int N=1e3+10;
int vis[N][N],level[N][N];
int n,m;
vector<pair<int,int>> moves={{0,1},{0,-1},{1,0},{-1,0}};
//corner moves: {1,1},{1,-1},{-1,1},{-1,-1}
bool valid(int x,int y){
    return (x>=0 && x<n && y>=0 && y<m);
}

void reset(){
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            vis[i][j]=0;
            level[i][j]=INF;
        }
    }
}

void bfs(int srcx,int srcy){
    reset();
    queue<pair<int,int>> q;
    vis[srcx][srcy]=1;
    level[srcx][srcy]=0;
    q.push({srcx,srcy});
    while(!q.empty()){
        pair<int,int> u=q.front();
        q.pop();
        int ux=u.first,uy=u.second;
        for(auto it:moves){
            int vx=it.first+ux;
            int vy=it.second+uy;
            if(!valid(vx,vy))
                continue;
            if(vis[vx][vy])
                continue;
            q.push({vx,vy});
            vis[vx][vy]=1;
            level[vx][vy]=level[ux][uy]+1;
        }
    }
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>matrix_bfs</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
