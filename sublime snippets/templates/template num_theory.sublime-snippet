<snippet>
	<content><![CDATA[
#include<bits/stdc++.h>
using namespace std;
#define M        1000000007
#define INF      1e18+9
#define PI       acos(-1.0)
#define ll       long long
#define ull      unsigned long long
#define all(x)   (x).begin(), (x).end()
#define pb       push_back
#define tc         \
        int tcase,tno; \
        cin >> tcase;  \
        for(tno=1;tno<=tcase;tno++)
#define pcn         cout<<"Case "<<tno<<":"<<endl;
#define ff(i,n)     for(ll i=0;i<n;i++)

const int MOD1 = 127657753, MOD2 = 987654319;
const int p1 = 137, p2 = 277;

ll binExp(ll a,ll b,ll mod){//O(logn)
    //a%=mod
    ll ans=1;
    while(b>0){
        if(b&1)
            ans=(ans*a)%mod;
        a=(a*a)%mod;
        b=b>>1;
    }
    return ans;
}
ll modAdd(ll a, ll b, ll m){return ((a % m) + (b % m)) % m;}
ll modSub(ll a, ll b, ll m){return ((a % m) - (b % m) + m) % m;} 
ll modMul(ll a, ll b, ll m){return ((a % m) * (b % m)) % m;}
ll modDiv(ll a, ll b, ll m){return ((a % m) * binExp(b,m-2,m)) % m;}


int main()
{
    ios_base:: sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
 
    return 0;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>template num_theory</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
