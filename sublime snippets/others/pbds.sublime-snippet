<snippet>
	<content><![CDATA[
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;
//variation= ll            less_equal<ll>       (change according to need)         ordered_multiset
// ordered_set os          declare like this
// os.insert(1)            insert like this
// *os.find_by_order(k)    returns an iterator to the k-th largest element (counting from zero)
// os.order_of_key(X)      returns the number of items in a set that are strictly smaller than X
// works like set and complexity O(logN)  and saves in ascending order with input order index
//if error occurs= c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\pb_ds\detail\resize_policy\hash_standard_resize_policy_imp.hpp0000644. Rename that file to remove the 0000644 from the end of it.
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>PBDS</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
